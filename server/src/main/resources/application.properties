
#profile
#spring.profiles.active=prod
#spring.profiles.active=local

#指定应用访问的上下文及端口
server.context-path=/middleware
server.port=8087

#logging日志配置
logging.file=../logs/middleware
logging.level.org.springframework=info
logging.level.com.fasterxml.jackson=info
logging.level.com.wangjunyao.middleware=debug

#json日期格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.datasource.initialize=false
spring.jmx.enabled=false

#数据库访问配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db_middleware?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

#mybatis配置
mybatis.config-location=classpath:mybatis-config.xml
mybatis.check-config-location=true
mybatis.mapper-locations=classpath:mappers/*.xml

#redis配置
#连接到本地的redis服务，127.0.0.1:6379
spring.redis.host=127.0.0.1
spring.redis.port=6379

#RabbitMQ配置
spring.rabbitmq.virtual-host=/
#RabbitMQ服务器所在host
spring.rabbitmq.host=127.0.0.1
#5672为RabbitMQ提供服务时的端口
spring.rabbitmq.port=5672
#guest和guest为连接到RabbitMQ服务器的账号和密码
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#这是自定义变量，表示本地开发环境
mq.env=local

#定义基本消息模型中队列、交换机和路由的名称
mq.basic.info.queue.name=${mq.env}.middleware.mq.basic.info.queue
mq.basic.info.exchange.name=${mq.env}.middleware.mq.basic.info.exchange
mq.basic.info.routing.key.name=${mq.env}.middleware.mq.basic.info.routing.key

#定义基本消息模型 - 对象消息
mq.object.info.queue.name=${mq.env}.middleware.mq.object.info.queue
mq.object.info.exchange.name=${mq.env}.middleware.mq.object.info.exchange
mq.object.info.routing.key.name=${mq.env}.middleware.mq.object.info.routing.key

#消息模型 - fanoutExchange
mq.fanout.queue.one.name=${mq.env}.middleware.mq.fanout.one.queue
mq.fanout.queue.two.name=${mq.env}.middleware.mq.fanout.two.queue
mq.fanout.exchange.name=${mq.env}.middleware.mq.fanout.exchange

#消息模式 - directExchange
#交换机
mq.direct.exchange.name=${mq.env}.middleware.mq.direct.exchange
#两个路由
mq.direct.routing.key.one.name=${mq.env}.middleware.mq.direct.routing.key.one
mq.direct.routing.key.two.name=${mq.env}.middleware.mq.direct.routing.key.two
#两个队列
mq.direct.queue.one.name=${mq.env}.middleware.mq.direct.one.queue
mq.direct.queue.two.name=${mq.env}.middleware.mq.direct.two.queue
mq.direct.queue.three.name=${mq.env}.middleware.mq.direct.three.queue

#消息模型 - topicExchange
#交换机
mq.topic.exchange.name=${mq.env}.middleware.mq.topic.exchange
#两个路由：分别包含 * 和 # 通配符
mq.topic.routing.key.one.name=${mq.env}.middleware.mq.topic.routing.*.key
mq.topic.routing.key.two.name=${mq.env}.middleware.mq.topic.routing.#.key
#两个队列
mq.topic.queue.one.name=${mq.env}.middleware.mq.topic.one.queue
mq.topic.queue.two.name=${mq.env}.middleware.mq.topic.two.queue

#确认消费模式为自动确认机制 auto
#队列名称
mq.auto.knowledge.queue.name=${mq.env}.middleware.auto.knowledge.queue
#交换机
mq.auto.knowledge.exchange.name=${mq.env}.middleware.auto.knowledge.exchange
#路由
mq.auto.knowledge.routing.key.name=${mq.env}.middleware.auto.knowledge.routing.key

#确认消费模式为手动确认机制 manual
#队列名称
mq.manual.knowledge.queue.name=${mq.env}.middleware.manual.knowledge.queue
#交换机
mq.manual.knowledge.exchange.name=${mq.env}.middleware.manual.knowledge.exchange
#路由
mq.manual.knowledge.routing.key.name=${mq.env}.middleware.manual.knowledge.routing.key



